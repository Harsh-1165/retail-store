name: Manual Service Deploy

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Select service to deploy'
        required: true
        type: choice
        options:
        - ui
        - catalog
        - orders
        - checkout
        - cart
        - app
      environment:
        description: 'Environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  deploy-service:
    name: 🚀 Deploy ${{ github.event.inputs.service }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate inputs
        run: |
          echo "🎯 Deploying service: ${{ github.event.inputs.service }}"
          echo "🌍 Environment: ${{ github.event.inputs.environment }}"
          echo "📦 Commit: ${{ github.sha }}"

      - name: Check secrets
        run: |
          echo "🔐 Checking required secrets..."
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "❌ AWS_ACCESS_KEY_ID is missing"
            exit 1
          fi
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "❌ AWS_SECRET_ACCESS_KEY is missing"
            exit 1
          fi
          if [ -z "${{ secrets.ECR_REGISTRY }}" ]; then
            echo "❌ ECR_REGISTRY is missing"
            exit 1
          fi
          echo "✅ All secrets are configured"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Test AWS connection
        run: |
          echo "🔗 Testing AWS connection..."
          aws sts get-caller-identity
          echo "✅ AWS connection successful"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Verify ECR repository exists
        run: |
          echo "🏪 Checking ECR repository..."
          aws ecr describe-repositories --repository-names retail-store-${{ github.event.inputs.service }} --region ${{ env.AWS_REGION }}
          echo "✅ ECR repository exists"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ github.event.inputs.service }}
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/retail-store-${{ github.event.inputs.service }}:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/retail-store-${{ github.event.inputs.service }}:latest
            ${{ env.ECR_REGISTRY }}/retail-store-${{ github.event.inputs.service }}:${{ github.event.inputs.environment }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image push
        run: |
          echo "🔍 Verifying image was pushed..."
          aws ecr describe-images --repository-name retail-store-${{ github.event.inputs.service }} --image-ids imageTag=${{ github.sha }} --region ${{ env.AWS_REGION }}
          echo "✅ Image pushed successfully"

      - name: Update Helm values
        run: |
          echo "⚙️ Updating Helm values..."
          if [ -f "src/${{ github.event.inputs.service }}/chart/values.yaml" ]; then
            sed -i "s|tag: .*|tag: \"${{ github.sha }}\"|g" "src/${{ github.event.inputs.service }}/chart/values.yaml"
            echo "✅ Helm values updated"
          else
            echo "⚠️ No Helm chart found for ${{ github.event.inputs.service }}"
          fi

      - name: Deployment Summary
        run: |
          echo "# 🎉 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** ${{ github.event.inputs.service }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.ECR_REGISTRY }}/retail-store-${{ github.event.inputs.service }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ✅ What was done:" >> $GITHUB_STEP_SUMMARY
          echo "- Built Docker image from \`src/${{ github.event.inputs.service }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Pushed to ECR with tags: \`${{ github.sha }}\`, \`latest\`, \`${{ github.event.inputs.environment }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Updated Helm chart values" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "Deploy the next service in sequence:" >> $GITHUB_STEP_SUMMARY
          echo "1. UI → 2. Catalog → 3. Orders → 4. Checkout → 5. Cart → 6. App" >> $GITHUB_STEP_SUMMARY
