name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ui: ${{ steps.changes.outputs.ui }}
      catalog: ${{ steps.changes.outputs.catalog }}
      orders: ${{ steps.changes.outputs.orders }}
      checkout: ${{ steps.changes.outputs.checkout }}
      cart: ${{ steps.changes.outputs.cart }}
      app: ${{ steps.changes.outputs.app }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            ui:
              - 'src/ui/**'
            catalog:
              - 'src/catalog/**'
            orders:
              - 'src/orders/**'
            checkout:
              - 'src/checkout/**'
            cart:
              - 'src/cart/**'
            app:
              - 'src/app/**'

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: |
      needs.detect-changes.outputs.ui == 'true' ||
      needs.detect-changes.outputs.catalog == 'true' ||
      needs.detect-changes.outputs.orders == 'true' ||
      needs.detect-changes.outputs.checkout == 'true' ||
      needs.detect-changes.outputs.cart == 'true' ||
      needs.detect-changes.outputs.app == 'true'
    strategy:
      matrix:
        service: [ui, catalog, orders, checkout, cart, app]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if service changed
        id: service-changed
        run: |
          if [ "${{ needs.detect-changes.outputs[matrix.service] }}" == "true" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        if: steps.service-changed.outputs.changed == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: steps.service-changed.outputs.changed == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ matrix.service }}
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ matrix.service }}:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-helm-values:
    needs: [detect-changes, build-and-push]
    runs-on: ubuntu-latest
    if: |
      needs.detect-changes.outputs.ui == 'true' ||
      needs.detect-changes.outputs.catalog == 'true' ||
      needs.detect-changes.outputs.orders == 'true' ||
      needs.detect-changes.outputs.checkout == 'true' ||
      needs.detect-changes.outputs.cart == 'true' ||
      needs.detect-changes.outputs.app == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Helm values
        run: |
          services=("ui" "catalog" "orders" "checkout" "cart" "app")
          updated_services=()
          
          for service in "${services[@]}"; do
            if [ "${{ needs.detect-changes.outputs[service] }}" == "true" ]; then
              echo "Updating $service Helm values..."
              
              # Update the image tag in values.yaml
              sed -i "s|tag: .*|tag: \"${{ github.sha }}\"|g" "src/$service/chart/values.yaml"
              
              updated_services+=("$service")
            fi
          done
          
          # Set output for commit message
          if [ ${#updated_services[@]} -gt 0 ]; then
            echo "UPDATED_SERVICES=${updated_services[*]}" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.UPDATED_SERVICES != ''
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add src/*/chart/values.yaml
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update image tags for services: ${{ env.UPDATED_SERVICES }}"
            git push
          fi